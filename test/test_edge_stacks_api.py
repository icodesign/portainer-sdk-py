# coding: utf-8

"""
    PortainerCE API

    Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API. Examples are available at https://documentation.portainer.io/api/api-examples/ You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).  # Authentication  Most of the API environments(endpoints) require to be authenticated as well as some level of authorization to be used. Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request with the **Bearer** authentication mechanism.  Example:  ``` Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE ```  # Security  Each API environment(endpoint) has an associated access policy, it is documented in the description of each environment(endpoint).  Different access policies are available:  - Public access - Authenticated access - Restricted access - Administrator access  ### Public access  No authentication is required to access the environments(endpoints) with this access policy.  ### Authenticated access  Authentication is required to access the environments(endpoints) with this access policy.  ### Restricted access  Authentication is required to access the environments(endpoints) with this access policy. Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.  ### Administrator access  Authentication as well as an administrator role are required to access the environments(endpoints) with this access policy.  # Execute Docker requests  Portainer **DO NOT** expose specific environments(endpoints) to manage your Docker resources (create a container, remove a volume, etc...).  Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.  To do so, you can use the `/endpoints/{id}/docker` Portainer API environment(endpoint) (which is not documented below due to Swagger limitations). This environment(endpoint) has a restricted access policy so you still need to be authenticated to be able to query this environment(endpoint). Any query on this environment(endpoint) will be proxied to the Docker API of the associated environment(endpoint) (requests and responses objects are the same as documented in the Docker API).  **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://documentation.portainer.io/api/api-examples/).   # noqa: E501

    OpenAPI spec version: 2.11.0
    Contact: info@portainer.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import portainer
from portainer.api.edge_stacks_api import EdgeStacksApi  # noqa: E501
from portainer.rest import ApiException


class TestEdgeStacksApi(unittest.TestCase):
    """EdgeStacksApi unit test stubs"""

    def setUp(self):
        self.api = portainer.api.edge_stacks_api.EdgeStacksApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_edge_stack_create(self):
        """Test case for edge_stack_create

        Create an EdgeStack  # noqa: E501
        """
        pass

    def test_edge_stack_delete(self):
        """Test case for edge_stack_delete

        Delete an EdgeStack  # noqa: E501
        """
        pass

    def test_edge_stack_file(self):
        """Test case for edge_stack_file

        Fetches the stack file for an EdgeStack  # noqa: E501
        """
        pass

    def test_edge_stack_inspect(self):
        """Test case for edge_stack_inspect

        Inspect an EdgeStack  # noqa: E501
        """
        pass

    def test_edge_stack_list(self):
        """Test case for edge_stack_list

        Fetches the list of EdgeStacks  # noqa: E501
        """
        pass

    def test_edge_stack_status_update(self):
        """Test case for edge_stack_status_update

        Update an EdgeStack status  # noqa: E501
        """
        pass

    def test_edge_stack_update(self):
        """Test case for edge_stack_update

        Update an EdgeStack  # noqa: E501
        """
        pass

    def test_endpoints_id_edge_stacks_stack_id_get(self):
        """Test case for endpoints_id_edge_stacks_stack_id_get

        Inspect an Edge Stack for an Environment(Endpoint)  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
